{"version":3,"sources":["reportWebVitals.js","components/socket.js","components/mainUi/TextsUi.js","components/mainUi/ChatMenu.js","resources/exit.svg","resources/hamburger.svg","components/mainUi/TopBar.js","components/mainUi/HamburgerMenu.js","components/themes.js","components/mainUi/Settings.js","components/mainUi/CreateChat.js","components/mainUi/ChatInfo.js","components/mainUi/InviteMenu.js","components/mainUi/YourInvites.js","resources/ping.mp3","components/App.js","components/modules.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","socket","io","withCredentials","TextsUi","props","textInputRef","useRef","messageViewRef","oldProps","handleNewMessage","sendMessage","current","focus","params","text","value","sender","username","time","Date","getTime","sendAndDisplayMessage","placeholder","validator","contains","alert","getNormalTimeFromUTC","thisDate","pmOrAm","hoursNon24","minutesWithOrWithoutZero","getHours","getMinutes","getMonth","getDate","getFullYear","useEffect","data","lastChild","scrollIntoView","console","log","window","screen","width","behavior","mapedTexts","map","element","i","senderName","className","ref","onFocus","maxLength","onKeyDown","event","keyCode","preventDefault","enterKeyEvent","onClick","ChatMenu","mapedChats","changeCurrentChat","toggleChatMenu","toggle","TopBar","style","content","hamburgerSvg","renHamburgerMenu","exitSvg","type","toggleHamburgerMenu","HamburgerMenu","a","options","method","fetch","response","json","location","replace","isAdmin","admin","logout","href","themes","name","bodyColor","contrastingBodyColor","textColor","yellowColor","greenColor","darkGreenColor","greenTextColor","blueColor","lineColor","hamburgerColor","themeOptions","theme","onChange","changeTheme","CreateChat","chatNameRef","buttonRef","processNewChat","chatName","isAlphanumeric","emit","innerHTML","on","body","reload","onSubmit","minLength","required","size","stopSpaces","ChatInfo","members","isChatAdmin","InviteMenu","useState","message","setMessage","setPreviousInput","input","button","successStyle","backgroundColor","color","loadingStyle","sendFormData","invitee","isValidConditions","isLength","min","max","prev","chatId","YourInvites","acceptInvite","isAccepted","setAppData","prevState","newInvites","invites","_id","push","length","MainUi","texts","chatNames","chatIds","admins","appData","isMobile","orientation","angle","renInternetWarning","renChatMenu","renRightContainer","renTobBar","renTextUi","renGrayBackground","renSettings","renCreateChat","renChatInfo","renInviteMenu","renYourInvites","render","setRender","bools","component","modules","toggleComponent","exitPopUp","currentChat","setCurrentChat","setTheme","audio","Audio","ping","addEventListener","settings","displayMessage","document","visibilityState","play","chatToAddTo","indexOf","newTexts","result","concat","arg","target","err","keys","Object","values","forEach","documentElement","setProperty","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9fc3862b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { io } from 'socket.io-client'\r\n\r\nfunction URL() {\r\n   if (process.env.NODE_ENV === \"development\") {\r\n      return \"http://localhost:8080/\"\r\n   } else {\r\n      return \"/\"\r\n   }\r\n}\r\nvar socket = io(URL(), {\r\n   withCredentials: true\r\n})\r\n\r\nexport default socket","import React, { useRef, useEffect } from 'react'\r\nimport validator from 'validator'\r\nexport default function TextsUi(props) {\r\n   var textInputRef = useRef(null),\r\n      messageViewRef = useRef(null)\r\n   var oldProps = {}\r\n\r\n   useEffect(() => {\r\n      oldProps = props.data\r\n      messageViewRef.current.lastChild.scrollIntoView();\r\n      textInputRef.current.focus()\r\n   }, [])\r\n   useEffect(() => {\r\n      if (props.data !== oldProps &&\r\n         props.data[0] === oldProps[0]\r\n      ) {//newProps\r\n         console.log('it worked!')\r\n         oldProps = props.data\r\n         if (window.screen.width > 760) {\r\n            messageViewRef.current.lastChild.scrollIntoView({ behavior: \"smooth\" });\r\n         } else {\r\n            messageViewRef.current.lastChild.scrollIntoView();\r\n         }\r\n      } else {//sameProps\r\n         messageViewRef.current.lastChild.scrollIntoView();\r\n      }\r\n   }, [props])\r\n\r\n   function handleNewMessage() {\r\n      const checkIfInputIsEmpty = () => {\r\n         (textInputRef.current.value === \"\")\r\n            ? textInputRef.current.placeholder = \"that was an empty message :(\"\r\n            : (validator.contains(textInputRef.current.value, '\\\\'))\r\n               ? alert('please don\\'t use backslashes')\r\n               : sendMessage()\r\n      }\r\n      const sendMessage = () => {\r\n         textInputRef.current.focus()\r\n         var params = {\r\n            text: textInputRef.current.value,\r\n            sender: props.username,\r\n            time: new Date().getTime()\r\n         }\r\n         props.sendAndDisplayMessage(params)\r\n         textInputRef.current.value = \"\"\r\n         textInputRef.current.placeholder = \"type a message here\"\r\n      }\r\n      checkIfInputIsEmpty()\r\n   }\r\n   function enterKeyEvent(event) {\r\n      if (event.keyCode == 13) {\r\n         handleNewMessage();\r\n         event.preventDefault();\r\n      };\r\n   }\r\n\r\n   function getNormalTimeFromUTC(thisDate) {\r\n      var pmOrAm\r\n      var hoursNon24\r\n      var minutesWithOrWithoutZero\r\n      thisDate = new Date(thisDate)\r\n      if (thisDate.getHours() > 12) {\r\n         pmOrAm = 'PM'\r\n         hoursNon24 = thisDate.getHours() - 12\r\n      } else {\r\n         pmOrAm = 'AM'\r\n         hoursNon24 = thisDate.getHours()\r\n         if (hoursNon24 === 0) {\r\n            hoursNon24 = 12\r\n         }\r\n      }\r\n      if (thisDate.getMinutes() <= 9) {\r\n         minutesWithOrWithoutZero = '0'\r\n      } else {\r\n         minutesWithOrWithoutZero = ''\r\n      }\r\n      var output = (thisDate.getMonth()\r\n         + 1 + '/' + thisDate.getDate())\r\n         + '/' + thisDate.getFullYear()\r\n         + ' ' + hoursNon24\r\n         + ':' + minutesWithOrWithoutZero + thisDate.getMinutes()\r\n         + ' ' + pmOrAm;\r\n      return (output)\r\n   }\r\n\r\n   const mapedTexts = props.data.map((element, i) => {\r\n      var senderName = element.sender\r\n      var className = \"othersMessage\"\r\n      if (element.sender === props.username) {\r\n         senderName = \"you\"\r\n         className = \"yourMessage\"\r\n      }\r\n      return (\r\n         <div className={className} key={i} >\r\n            <div className=\"info\">\r\n               <span className=\"sender\">{senderName + \" - \"}</span>\r\n               <span className=\"time\">{\"  \" + getNormalTimeFromUTC(element.time)}</span>\r\n            </div>\r\n            {element.text}\r\n         </div>\r\n      )\r\n   })\r\n   return (\r\n      <div className=\"TextsUi\">\r\n         <div\r\n            className=\"messagesView\"\r\n            ref={messageViewRef}\r\n         >\r\n            {mapedTexts}\r\n            <div />\r\n         </div>\r\n         <div className=\"messageInputs\">\r\n            <textarea\r\n               onFocus={() => {\r\n                  messageViewRef.current.lastChild.scrollIntoView();\r\n               }}\r\n               maxLength=\"170\"\r\n               ref={textInputRef}\r\n               onKeyDown={(event) => { enterKeyEvent(event) }}\r\n               placeholder=\"type a message here\"\r\n            />\r\n            <button onClick={() => { handleNewMessage() }}>\r\n               Send\r\n            </button>\r\n         </div>\r\n\r\n      </div>\r\n   )\r\n}","import React from 'react'\r\nexport default function ChatMenu(props) {\r\n\r\n   const mapedChats = props.data.map((element, i) => {\r\n      return (\r\n         <div\r\n            className=\"individualChat\"\r\n            onClick={() => { props.changeCurrentChat(i) }}\r\n            key={i}\r\n         >\r\n            {element}\r\n         </div>\r\n      )\r\n   })\r\n   return (\r\n      <div className=\"ChatMenu\">\r\n         <div className=\"topBar\">\r\n            <a\r\n               className='exitButton'\r\n               onClick={() => props.toggleChatMenu()}\r\n            />\r\n               Chats\r\n            </div>\r\n         <div className=\"chats\">\r\n            {mapedChats}\r\n         </div>\r\n         <button\r\n            className=\"createChatButton\"\r\n            onClick={() => props.toggle('renCreateChat')}\r\n         >+</button>\r\n      </div>\r\n   )\r\n}","export default __webpack_public_path__ + \"static/media/exit.05551b1a.svg\";","export default __webpack_public_path__ + \"static/media/hamburger.8d514b40.svg\";","import React from \"react\"\r\nimport exitSvg from '../../resources/exit.svg'\r\nimport hamburgerSvg from '../../resources/hamburger.svg'\r\n\r\nexport default function TopBar(props) {\r\n   var style = { content: `url(${hamburgerSvg})` }\r\n   const conditionalRender = (() => {\r\n      if (props.renHamburgerMenu) {\r\n         style = { content: `url(${exitSvg})` }\r\n      } else {\r\n         style = { content: `url(${hamburgerSvg})` }\r\n      }\r\n   })()\r\n   return (\r\n      <div className=\"TopBar\">\r\n         <a className=\"chatButton\" onClick={() => props.toggleChatMenu()} />\r\n         <div>{props.data}</div>\r\n         <a\r\n            className=\"hamburgerButton\"\r\n            type=\"button\"\r\n            onClick={() => { props.toggleHamburgerMenu() }}\r\n            style={style}\r\n         />\r\n      </div>\r\n   )\r\n}","import React from 'react'\r\n\r\nexport default function HamburgerMenu(props) {\r\n\r\n   const bugReportURL = \"https://tipsandbugreport.netlify.app/\"\r\n   async function logout() {\r\n      const options = {\r\n         method: 'delete',\r\n      };\r\n      const response = await fetch('/logout', options);\r\n      const json = await response.json();\r\n      window.location.replace(\"/login\")\r\n   }\r\n   const isAdmin = props.username === props.admin\r\n   return (\r\n      <div className=\"HamburgerMenu\">\r\n         <a className=\"exitButton\" onClick={() => props.toggleHamburgerMenu()} />\r\n         <div className=\"youAreLoggedInAs\">Logged in as {props.username} </div>\r\n         {isAdmin &&\r\n            <div>\r\n               <button\r\n                  onClick={() => props.toggle('renInviteMenu')}\r\n               >Invite</button><br />\r\n            </div>}\r\n         <button onClick={() => props.toggle('renChatInfo')} >Chat Info</button><br />\r\n         <button onClick={() => props.toggle('renSettings')} >Settings</button><br />\r\n         <button onClick={() => props.toggle('renYourInvites')}>Your Invites</button><br />\r\n         <button onClick={() => logout()}>Logout</button><br />\r\n         <div className=\"links\">\r\n            <a href=\"/home\">Home</a>\r\n            <pre> | </pre>\r\n            <a href={bugReportURL}>Report Bug</a>\r\n         </div>\r\n      </div>\r\n   )\r\n}","var themes = [\r\n   {\r\n      name: 'black',\r\n      bodyColor: 'rgb(20, 20, 20)',\r\n      contrastingBodyColor: 'rgb(30, 30, 30)',\r\n      textColor: 'white',\r\n      yellowColor: 'rgb(196, 199, 0)',\r\n      greenColor: '#52fb9e',\r\n      darkGreenColor: '#36a568',\r\n      greenTextColor: '#36ff90',\r\n      blueColor: '#45daff',\r\n      lineColor: 'white',\r\n      hamburgerColor: 'brightness(100%)'\r\n   },\r\n   {\r\n      name: 'gray',\r\n      bodyColor: 'rgb(56, 56, 56)',\r\n      contrastingBodyColor: 'rgb(70,70,70)',\r\n      textColor: 'white',\r\n      yellowColor: 'rgb(238, 241, 35)',\r\n      greenColor: '#52fb9e',\r\n      greenTextColor: '#2de47f',\r\n      darkGreenColor: '#36a568',\r\n      blueColor: 'rgb(99, 202, 236)',\r\n      lineColor: 'white',\r\n      hamburgerColor: 'brightness(100%)'\r\n   },\r\n]\r\nexport default themes","import React from 'react'\r\nimport themes from '../themes.js'\r\n\r\nexport default function HamburgerMenu(props) {\r\n\r\n   var themeOptions = themes.map((element, i) => {\r\n      return <option value={i} key={i}>{element.name}</option>\r\n   })\r\n   return (\r\n      <div className=\"Settings\" style={props.style} >\r\n         <a type='button' onClick={() => props.toggle('renSettings')}></a>\r\n         <div className=\"title\">Settings</div>\r\n         <div>Theme</div>\r\n         <select value={props.theme} onChange={props.changeTheme}>\r\n            {themeOptions}\r\n         </select>\r\n      </div>\r\n   )\r\n}","import React, { useRef, useEffect } from 'react'\r\nimport socket from '../socket'\r\nimport validator from 'validator'\r\n\r\nexport default function CreateChat(props) {\r\n   var chatNameRef = useRef(null),\r\n      buttonRef = useRef(null)\r\n\r\n   function success() {\r\n      alert('successfully created')\r\n      window.location.reload()\r\n   }\r\n\r\n   function processNewChat() {\r\n      const chatName = chatNameRef.current.value\r\n\r\n      const validate = (() => {\r\n         (validator.isAlphanumeric(chatName))\r\n            ? sendNewChatInfo()\r\n            : alert('Chat name must be alphanumeric')\r\n      })()\r\n      function sendNewChatInfo() {\r\n         socket.emit('newChat', {\r\n            \"chatName\": chatNameRef.current.value\r\n         })\r\n         buttonRef.current.innerHTML = \"creating...\"\r\n         socket.on('newChat', (body) => {\r\n            (body === 200)\r\n               ? success()\r\n               : (body === 400 || body === 500)\r\n                  ? alert('there was an error when creating your chat')\r\n                  : (body === 403)\r\n                  && alert('you already have already created the max of 5 chats');\r\n            buttonRef.current.innerHTML = \"CREATE\"\r\n         })\r\n      }\r\n   }\r\n   useEffect(() => {\r\n      chatNameRef.current.focus();\r\n   }, [])\r\n   function stopSpaces(event) {\r\n      if (event.keyCode == 32) {\r\n         event.preventDefault();\r\n      };\r\n   }\r\n   return (\r\n      <div\r\n         className=\"CreateChat\">\r\n         <a type='button' onClick={() => props.toggle('renCreateChat')} />\r\n         <div className=\"title\">Create Chat</div>\r\n         <form\r\n            onSubmit={(event) => {\r\n               processNewChat()\r\n               event.preventDefault()\r\n            }}>\r\n            <input\r\n               placeholder=\"Chat Name\"\r\n               maxLength=\"10\"\r\n               minLength=\"4\"\r\n               ref={chatNameRef}\r\n               required\r\n               size=\"15\"\r\n               onKeyDown={(event) => { stopSpaces(event) }}\r\n            />\r\n            <button\r\n               ref={buttonRef}\r\n               type=\"submit\"\r\n               className=\"Create\"\r\n            >Create</button>\r\n         </form>\r\n      </div >\r\n   )\r\n}","export default function ChatInfo(props) {\r\n   var members = props.members.map((element, i) => {\r\n      return (\r\n         <div className=\"members\" key={i}>\r\n            {element === props.username ? \"You\" : element} <br />\r\n         </div>\r\n      )\r\n   })\r\n\r\n   const isChatAdmin = props.username === props.admin\r\n   return (\r\n      <div className=\"ChatInfo\">\r\n         <a type='button' onClick={() => props.toggle('renChatInfo')}></a>\r\n         <div className=\"title\">Chat Info</div>\r\n         <div className=\"subTitle\">admin: \r\n            <span className=\"adminInfo\">\r\n               {isChatAdmin ? \"You\" : props.admin}\r\n            </span>\r\n         </div>\r\n         <div className=\"subTitle\">members</div>\r\n         <div className=\"info\">{members}</div>\r\n      </div>\r\n   )\r\n}","import React, { useRef, useState, useEffect } from 'react'\r\nimport socket from '../socket'\r\nimport validator from 'validator'\r\n\r\nexport default function InviteMenu(props) {\r\n   const [message, setMessage] = useState(null)\r\n   const [previousInput, setPreviousInput] = useState(null)\r\n   var input = useRef(null)\r\n   var button = useRef(null)\r\n   const successStyle = {\r\n      backgroundColor: \"var(--darkGreenColor)\",\r\n      color: \"var(--textColor)\"\r\n   }\r\n   const loadingStyle = {\r\n      backgroundColor: \"var(--bodyColor)\",\r\n      color: \"var(--textColor)\"\r\n   }\r\n   function sendFormData() {\r\n      const invitee = input.current.value\r\n      const isValidConditions = (\r\n         validator.isLength(invitee, { min: 0, max: 10 })\r\n         && validator.isAlphanumeric(invitee)\r\n      )\r\n\r\n      const validate = (() => {\r\n         setPreviousInput(prev => {\r\n            (invitee === prev)\r\n               ? setMessage({ text: \"already tried that\", color: {} })\r\n               : (invitee === props.username)\r\n                  ? setMessage({ text: \"can't invite yourself\", color: {} })\r\n                  : (isValidConditions)\r\n                     ? sendMessage()\r\n                     : setMessage({ text: \"Must be AlphaNumeric\", color: {} });\r\n\r\n            return invitee\r\n         })\r\n      })()\r\n      function sendMessage() {\r\n         console.log('ran')\r\n         socket.emit('invite', {\r\n            \"chatId\": props.chatId,\r\n            \"invitee\": invitee\r\n         })\r\n         setMessage({ text: \"Sending...\", color: loadingStyle })\r\n         receiveMessage()\r\n      }\r\n      function receiveMessage() {\r\n         socket.on('invite', data => {\r\n            if (data === 200) {\r\n               setMessage({\r\n                  \"text\": 'Invite Sent!',\r\n                  \"color\": successStyle\r\n               })\r\n            } else if (data === 404) {\r\n               setMessage({ text: 'user not found', color: {} })\r\n            } else if (data === 409) {\r\n               setMessage({ text: 'user aleady invited', color: {} })\r\n            } else {\r\n               setMessage({ text: \"error\", color: {} })\r\n            }\r\n         })\r\n      }\r\n   }\r\n   useEffect(() => {\r\n      input.current.focus()\r\n   },[])\r\n   return (\r\n      <div className=\"InviteMenu\">\r\n         <a type='button' onClick={() => props.toggle('renInviteMenu')}></a>\r\n         <div className=\"title\">Invite</div>\r\n         <div className=\"subTitle\">Invite your friends to this chat</div>\r\n         <form className=\"invite\"\r\n            onSubmit={event => {\r\n               event.preventDefault()\r\n               sendFormData()\r\n            }}>\r\n            <input\r\n               ref={input}\r\n               required\r\n               placeholder=\"Invite somone\"\r\n               size=\"14\"\r\n               maxLength=\"10\"\r\n            />\r\n            <button\r\n               type=\"submit\"\r\n               ref={button}\r\n            >Send</button>\r\n         </form>\r\n         {message &&\r\n            <div\r\n               className=\"message\"\r\n               style={message.color}\r\n            >{message.text}</div>}\r\n      </div>\r\n   )\r\n}\r\n","import React from 'react'\r\nimport socket from '../socket.js'\r\n\r\nexport default function YourInvites(props) {\r\n\r\n   function acceptInvite(isAccepted, chatId) {\r\n      socket.emit('acceptInvite', {\r\n         \"chatId\": chatId,\r\n         \"isAccepted\": isAccepted\r\n      })\r\n      socket.on('acceptInvite', body => {\r\n         if (body !== 200) {\r\n            alert('error', body)\r\n         } else if (isAccepted) {\r\n            alert('success')\r\n            window.location.reload()\r\n         } else if (!isAccepted) {\r\n            updateState()\r\n         }\r\n      })\r\n   function updateState() {\r\n      props.setAppData(prevState => {\r\n         var newInvites = []\r\n         for (var element of prevState.invites) {\r\n            (element._id !== chatId) && newInvites.push()\r\n         }\r\n         return {\r\n            ...prevState,\r\n            'invites': newInvites\r\n         }\r\n      })\r\n   }\r\n}\r\n\r\nvar invites = props.invites.map((element, i) => {\r\n   console.log(element)\r\n   return (<div className=\"individualInvite\" key={i}>\r\n      {`${element.admin} - ${element.chatName} `}\r\n      <button\r\n         className=\"accept\"\r\n         onClick={() => acceptInvite(true, element._id)}\r\n      >accept</button>\r\n      <button\r\n         className=\"decline\"\r\n         onClick={() => acceptInvite(false, element._id)}\r\n      >decline</button>\r\n   </div>)\r\n})\r\nreturn (\r\n   <div className=\"YourInvites\">\r\n      <a onClick={() => props.toggle('renYourInvites')} />\r\n      <div className=\"title\">Your Invites</div>\r\n      {invites.length !== 0 ? invites: \r\n      <div className=\"noInvites\">you have no invites</div>}\r\n   </div>\r\n)\r\n}\r\n","export default __webpack_public_path__ + \"static/media/ping.6f864733.mp3\";","//dependencies\r\nimport React, { useEffect, useState } from 'react'\r\nimport socket from './socket.js'\r\n//components\r\nimport TextsUi from './mainUi/TextsUi.js'\r\nimport ChatMenu from './mainUi/ChatMenu.js'\r\nimport TopBar from './mainUi/TopBar.js'\r\nimport HamburgerMenu from './mainUi/HamburgerMenu.js'\r\nimport Settings from './mainUi/Settings.js'\r\nimport CreateChat from './mainUi/CreateChat.js'\r\nimport ChatInfo from './mainUi/ChatInfo'\r\nimport InviteMenu from './mainUi/InviteMenu.js'\r\nimport YourInvites from './mainUi/YourInvites.js'\r\n\r\n//other files\r\nimport css from './App.scss'\r\nimport themes from './themes.js'\r\nimport ping from '../resources/ping.mp3'\r\nimport * as modules from './modules.js'\r\n\r\nexport default function MainUi() {\r\n   const [appData, setAppData] = useState({\r\n      texts: [[{\r\n         \"time\": 0,\r\n         \"text\": \"Loading...\",\r\n         \"sender\": \"Loading...\"\r\n      }],],\r\n      chatNames: [\"Loading...\"],\r\n      chatIds: [\"Loading...\"],\r\n      username: \"Loading\",\r\n      admins: [\"Loading...\"],\r\n      members: [\"Loading...\"],\r\n      invites: [\"Loading...\"]\r\n   })\r\n   const [\r\n      render, setRender, toggleHamburgerMenu\r\n      , toggleChatMenu, toggleComponent, exitPopUp\r\n   ] = modules.useRender()\r\n   const [currentChat, setCurrentChat] = useState(0)\r\n   const [theme, setTheme] = useState(1)\r\n   const audio = new Audio(ping)\r\n\r\n   useEffect(() => {\r\n      window.screen.orientation.addEventListener(\"change\", orientation => {\r\n         if (window.screen.orientation.angle !== 0) {\r\n            alert(\"this app works best in portrait mode\")\r\n         }\r\n      });\r\n\r\n      socket.on('allTexts', (body) => {\r\n         if (body !== \"invalid credentials\") {\r\n            setAppData(body)\r\n            changeTheme(body.settings)\r\n         } else {\r\n            console.log(\"ERR Credentials Invalid\")\r\n         }\r\n      })\r\n      socket.on('texts', (body) => {\r\n         displayMessage(body)\r\n         if (document.visibilityState !== 'visible') {\r\n            audio.play()\r\n         }\r\n      })\r\n      socket.on('disconnect', () => {\r\n         setRender({\r\n            ...render,\r\n            renInternetWarning: true,\r\n            renGrayBackground: true\r\n         })\r\n         window.location.reload();\r\n      })\r\n   }, [])\r\n\r\n   function sendAndDisplayMessage(message) {\r\n      displayMessage(message)\r\n      socket.emit('texts', {\r\n         \"text\": message.text,\r\n         \"time\": message.time,\r\n         \"chatId\": appData.chatIds[currentChat]\r\n      })\r\n   }\r\n   //style functions\r\n   const changeCurrentChat = (arg) => {\r\n      if (window.screen.width <= 760) {\r\n         setRender({\r\n            ...render,\r\n            renChatMenu: false,\r\n            renRightContainer: true\r\n         })\r\n      }\r\n      setCurrentChat(arg)\r\n   }\r\n   function displayMessage(message) {\r\n      setAppData(prevState => {\r\n         var chatToAddTo = currentChat\r\n         if (message.chatId) {\r\n            chatToAddTo = prevState.chatIds.indexOf(message.chatId)\r\n         }\r\n         console.log({ chatToAddTo, message })\r\n         var newTexts = prevState.texts.map((element, i) => {\r\n            var result = element\r\n            if (i === chatToAddTo) {\r\n               result = element.concat([message])\r\n            }\r\n            return result\r\n         })\r\n         console.log({ newTexts }, prevState.texts)\r\n         return {\r\n            ...prevState,\r\n            texts: newTexts\r\n         }\r\n      })\r\n   }\r\n   const changeTheme = (arg) => {\r\n      try {\r\n         var value = arg.target.value\r\n         socket.emit('settings', {\r\n            settings: value\r\n         })\r\n      } catch (err) {\r\n         var value = arg\r\n      }\r\n      var keys = Object.keys(themes[value]),\r\n         values = Object.values(themes[value])\r\n      setTheme(value)\r\n      keys.forEach((element, i) => {\r\n         document.documentElement.style.setProperty(`--${element}`, values[i]);\r\n      })\r\n   }\r\n   return (\r\n      <div className=\"mainUi\">\r\n         {render.renInternetWarning &&\r\n            <div className=\"internetWarningPopUp\" >\r\n               Connection error, please check your internet\r\n            </div>}\r\n         {render.renGrayBackground &&\r\n            <div\r\n               className=\"grayBackground\"\r\n               onClick={() => exitPopUp()}\r\n            />}\r\n         {render.renSettings &&\r\n            <Settings\r\n               toggle={toggleComponent}\r\n               changeTheme={changeTheme}\r\n               theme={theme}\r\n            />}\r\n         {render.renChatInfo &&\r\n            <ChatInfo\r\n               toggle={toggleComponent}\r\n               admin={appData.admins[currentChat]}\r\n               members={appData.members[currentChat]}\r\n               username={appData.username}\r\n            />}\r\n\r\n         {render.renCreateChat &&\r\n            <CreateChat\r\n               toggle={toggleComponent}\r\n            />}\r\n\r\n         {render.renInviteMenu &&\r\n            <InviteMenu\r\n               toggle={toggleComponent}\r\n               chatId={appData.chatIds[currentChat]}\r\n               username={appData.username}\r\n               chatName={appData.chatNames[currentChat]}\r\n               username={appData.username}\r\n            />}\r\n\r\n         {render.renChatMenu &&\r\n            <ChatMenu\r\n               changeCurrentChat={(arg) => changeCurrentChat(arg)}\r\n               data={appData.chatNames}\r\n               toggleChatMenu={toggleChatMenu}\r\n               toggle={toggleComponent}\r\n            />}\r\n\r\n         {render.renYourInvites &&\r\n            <YourInvites\r\n               toggle={toggleComponent}\r\n               invites={appData.invites}\r\n               setAppData={setAppData}\r\n            />}\r\n\r\n         {render.renRightContainer &&\r\n            <div className=\"rightContainer\">\r\n               {render.renTobBar &&\r\n                  <TopBar\r\n                     renHamburgerMenu={render.renHamburgerMenu}\r\n                     data={appData.chatNames[currentChat]}\r\n                     toggleHamburgerMenu={toggleHamburgerMenu}\r\n                     toggleChatMenu={toggleChatMenu}\r\n                  />}\r\n               {render.renHamburgerMenu &&\r\n                  <HamburgerMenu\r\n                     username={appData.username}\r\n                     admin={appData.admins[currentChat]}\r\n                     toggle={toggleComponent}\r\n                     toggleHamburgerMenu={toggleHamburgerMenu}\r\n                  />}\r\n               {render.renTextUi &&\r\n                  <TextsUi\r\n                     sendAndDisplayMessage={(arg) => sendAndDisplayMessage(arg)}\r\n                     data={appData.texts[currentChat]}\r\n                     username={appData.username}\r\n                  />}\r\n            </div>}\r\n      </div >\r\n   )\r\n}","import React, { useState } from 'react'\r\n\r\nfunction useRender() {\r\n   var isMobile = window.screen.width <= 760 && window.screen.orientation.angle === 0\r\n   const [render, setRender] = useState({\r\n      renInternetWarning: false,\r\n      renChatMenu: true,\r\n      renRightContainer: isMobile ? false : true,\r\n      renTobBar: true,\r\n      renTextUi: true,\r\n      renGrayBackground: false,\r\n      renHamburgerMenu: false,\r\n      renSettings: false,\r\n      renCreateChat: false,\r\n      renChatInfo: false,\r\n      renInviteMenu: false,\r\n      renYourInvites: false\r\n   })\r\n   const toggleHamburgerMenu = () => {\r\n      setRender(prevState => {\r\n         var bools = {\r\n            ...render,\r\n            renHamburgerMenu: false,\r\n            renRightContainer: true,\r\n            renChatMenu: true\r\n         }\r\n         if (isMobile) {\r\n            if (!prevState.renHamburgerMenu) {\r\n               bools.renTextUi = false\r\n               bools.renChatMenu = false\r\n               bools.renHamburgerMenu = true\r\n               bools.renTobBar = false\r\n            } else {\r\n               bools.renChatMenu = false\r\n               bools.renRightContainer = true\r\n               bools.renTobBar = true\r\n               bools.renTextUi = true\r\n            }\r\n         } else {\r\n            if (!prevState.renHamburgerMenu) {\r\n               bools.renHamburgerMenu = true\r\n            }\r\n         }\r\n         return bools\r\n      })\r\n   }\r\n   function toggleComponentRender(component) {\r\n      setRender(prevState => {\r\n         return {\r\n            ...render,\r\n            [component]: !prevState[component],\r\n            renGrayBackground: !prevState[component]\r\n         }\r\n      })\r\n   }\r\n   const toggleChatMenu = () => {\r\n      setRender(prevState => {\r\n         return {\r\n            ...render,\r\n            renChatMenu: !prevState.renChatMenu,\r\n            renRightContainer: prevState.renChatMenu\r\n         }\r\n      })\r\n   }\r\n   const exitPopUp = () => {\r\n      setRender(prevState => {\r\n         return {\r\n            ...prevState,\r\n            renGrayBackground: false,\r\n            renSettings: false,\r\n            renCreateChat: false,\r\n            renChatInfo: false,\r\n            renInviteMenu: false,\r\n            renYourInvites: false\r\n         }\r\n      })\r\n   }\r\n   return [\r\n      render, setRender, toggleHamburgerMenu,\r\n      toggleChatMenu, toggleComponentRender, exitPopUp\r\n   ]\r\n}\r\n\r\nexport { useRender }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport App from './components/App.js'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}