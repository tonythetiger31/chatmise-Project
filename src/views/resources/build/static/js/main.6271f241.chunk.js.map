{"version":3,"sources":["components/MainUi/TextsUi.js","components/MainUi/ChatMenu.js","components/MainUi/TopBar.js","components/MainUi/MainUi.js","components/App.js","reportWebVitals.js","index.js"],"names":["TextsUi","props","textInput","React","createRef","messageView","scrollBehavior","this","current","value","params","text","action","placeholder","event","keyCode","handleNewMessage","preventDefault","oldProps","data","lastChild","scrollIntoView","getNormalTimeFromUTC","thisDate","pmOrAm","hoursNon24","minutesWithOrWithoutZero","Date","getHours","getMinutes","getMonth","getDate","getFullYear","mapedTexts","map","element","i","sender","className","time","ref","style","onKeyDown","enterKeyEvent","onClick","Component","ChatMenu","mapedChats","TopBar","console","log","process","socket","io","withCredentials","MainUi","state","texts","chats","currentChat","user","changeCurrentChat","bind","addNewMessageToState","on","body","setState","_","collections","arg","prevState","result","concat","emit","chat","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6271f241.chunk.js","sourcesContent":["import React from 'react'\r\nexport default class TextsUi extends React.Component {\r\n   constructor(props) {\r\n      super()\r\n      this.textInput = React.createRef()\r\n      this.messageView = React.createRef()\r\n      this.scrollBehavior = { scrollBehavior: \"auto\" }\r\n   }\r\n   handleNewMessage() {\r\n      if (this.textInput.current.value !== \"\") {\r\n         this.scrollBehavior = {\r\n            scrollBehavior: \"smooth\"\r\n         }\r\n         var params = { text: this.textInput.current.value }\r\n         this.props.action(params)\r\n         this.textInput.current.value = \"\"\r\n         this.textInput.current.placeholder = \"type a message here\"\r\n\r\n      } else {\r\n         this.textInput.current.placeholder = \"that was an empty message :(\"\r\n      }\r\n   }\r\n   enterKeyEvent(event) {\r\n      if (event.keyCode == 13) {\r\n         this.handleNewMessage();\r\n         event.preventDefault();\r\n      };\r\n   }\r\n   componentDidMount() {\r\n      this.oldProps = this.props.data\r\n      this.messageView.current.lastChild.scrollIntoView();\r\n   }\r\n   componentDidUpdate() {\r\n      this.messageView.current.lastChild.scrollIntoView();\r\n   }\r\n   render() {\r\n      function getNormalTimeFromUTC(thisDate) {\r\n         var pmOrAm\r\n         var hoursNon24\r\n         var minutesWithOrWithoutZero\r\n         thisDate = new Date(thisDate)\r\n         if (thisDate.getHours() > 12) {\r\n            pmOrAm = 'PM'\r\n            hoursNon24 = thisDate.getHours() - 12\r\n         } else {\r\n            pmOrAm = 'AM'\r\n            hoursNon24 = thisDate.getHours()\r\n         }\r\n         if (thisDate.getMinutes() <= 9) {\r\n            minutesWithOrWithoutZero = '0'\r\n         } else {\r\n            minutesWithOrWithoutZero = ''\r\n         }\r\n         var output = (thisDate.getMonth()\r\n            + 1 + '/' + thisDate.getDate())\r\n            + '/' + thisDate.getFullYear()\r\n            + ' ' + hoursNon24\r\n            + ':' + minutesWithOrWithoutZero + thisDate.getMinutes()\r\n            + ' ' + pmOrAm;\r\n         return (output)\r\n      }\r\n      if (this.props.data === this.oldProps) {\r\n         this.scrollBehavior = { scrollBehavior: \"auto\" }\r\n      } else {\r\n         this.oldProps = this.props.data\r\n      }\r\n      const mapedTexts = this.props.data.map((element, i) => {\r\n         if (element.sender === \"d\") {\r\n            \r\n         }\r\n            return (\r\n               <div className=\"individualMessage\" key={i} >\r\n                  <div className=\"info\">\r\n                     <span className=\"sender\">{element.sender + \" - \"}</span>\r\n                     <span className=\"time\">{\"  \" + getNormalTimeFromUTC(element.time)}</span>\r\n                  </div>\r\n                  {element.text}\r\n               </div>\r\n            )\r\n      })\r\n      return (\r\n         <div className=\"TextsUi\" >\r\n            <div\r\n               className=\"messagesView\"\r\n               ref={this.messageView}\r\n               style={this.scrollBehavior}\r\n            >\r\n               {mapedTexts}\r\n            </div>\r\n            <div className=\"messageInputs\">\r\n               <textarea\r\n                  ref={this.textInput}\r\n                  onKeyDown={(event) => { this.enterKeyEvent(event) }}\r\n                  placeholder=\"type a message here\"\r\n               />\r\n               <button onClick={() => { this.handleNewMessage() }}>\r\n                  Enter\r\n               </button>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}","import React from 'react'\r\nexport default class ChatMenu extends React.Component {\r\n   constructor() {\r\n      super()\r\n   }\r\n   render() {\r\n      const mapedChats = this.props.data.map((element, i) => {\r\n         return (\r\n            <div\r\n               className=\"individualChat\"\r\n               onClick={() => { this.props.action(i) }}\r\n               key={i}\r\n            >\r\n               {element}\r\n            </div>\r\n         )\r\n      })\r\n      return (\r\n         <div className=\"ChatMenu\">\r\n            {mapedChats}\r\n         </div>\r\n      )\r\n   }\r\n}","import React from \"react\"\r\nexport default class TopBar extends React.Component{\r\n   constructor(){\r\n      super()\r\n   }\r\n   render(){\r\n      return(\r\n         <div className=\"TopBar\">\r\n            <div>{this.props.data}</div>\r\n         </div>\r\n      )\r\n   }\r\n}","import React from 'react'\r\nimport TextsUi from './TextsUi.js'\r\nimport ChatMenu from './ChatMenu.js'\r\nimport TopBar from './TopBar.js'\r\nimport { io } from \"socket.io-client\"\r\n\r\nvar URL = \"/\"\r\nconsole.log(process.env)\r\nif (process.env.NODE_ENV === \"development\") {\r\nURL = \"localhost:80/\"\r\n}\r\nvar socket = io(URL, {\r\n   withCredentials: true\r\n})\r\nexport default class MainUi extends React.Component {\r\n   constructor() {\r\n      super()\r\n      this.state = {\r\n         texts: [[{\r\n            \"time\": 3141592653,\r\n            \"text\": \"Loading...\",\r\n            \"sender\": \"Loading...\"\r\n         }],],\r\n         chats: [\"Loading...\"],\r\n         currentChat: 0,\r\n         user: \"Loading\"\r\n      }\r\n      this.changeCurrentChat = this.changeCurrentChat.bind(this)\r\n      this.addNewMessageToState = this.addNewMessageToState.bind(this)\r\n   }\r\n   componentDidMount() {\r\n      socket.on('allTexts', (body) => {\r\n         if (body !== \"invalid credentials\") {\r\n            console.log(body)\r\n            this.setState((_) => {\r\n               return {\r\n                  chats: body.collections,\r\n                  texts: body.data,\r\n                  user: \"oof\"\r\n               }\r\n            })\r\n         } else {\r\n            console.log(\"ERR Credentials Invalid\")\r\n         }\r\n      })\r\n   }\r\n   changeCurrentChat(arg) {\r\n      this.setState({\r\n         currentChat: arg\r\n      })\r\n   }\r\n   addNewMessageToState(arg) {\r\n      this.setState((prevState) => {\r\n         var newTexts = prevState.texts.map((element, i) => {\r\n            var result = element\r\n            if (i === this.state.currentChat) {\r\n               result = element.concat([arg])\r\n            }\r\n            return result\r\n         })\r\n         return {\r\n            texts: newTexts\r\n         }\r\n      })\r\n      socket.emit('texts', {\r\n         text: arg.text,\r\n         time: 1612501270210,\r\n         chat: this.state.chats[this.state.currentChat]\r\n      })\r\n   }\r\n   render() {\r\n      return (\r\n         <div className=\"MainUi\">\r\n            <ChatMenu\r\n               action={(arg) => { this.changeCurrentChat(arg) }}\r\n               data={this.state.chats}\r\n            />\r\n            <div className=\"textsUiAndTopBarContainer\">\r\n               <TopBar\r\n                  data={this.state.chats[this.state.currentChat]}\r\n               />\r\n               <TextsUi\r\n                  action={(arg) => { this.addNewMessageToState(arg) }}\r\n                  data={this.state.texts[this.state.currentChat]}\r\n               />\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}","import MainUi from './MainUi/MainUi'\nimport './App.scss'\nfunction App() {\n  return (\n    <div>\n      <MainUi />\n      \n       {/* \n       <Settings /> \n       <HamburgerMenu/>\n       <PopUpAlerts />\n       <MainUi \n         <TopBar />\n         <ChatMenu />\n         <Texts />\n       />\n       */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}