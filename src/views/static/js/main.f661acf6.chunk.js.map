{"version":3,"sources":["reportWebVitals.js","components/mainUi/TextsUi.js","components/mainUi/ChatMenu.js","resources/exit.svg","resources/hamburger.svg","components/mainUi/TopBar.js","components/mainUi/HamburgerMenu.js","components/themes.js","components/mainUi/Settings.js","resources/ping.mp3","components/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TextsUi","props","textInput","React","createRef","messageView","oldProps","sendMessage","current","focus","params","text","value","sender","username","time","Date","getTime","sendAndDisplayMessage","placeholder","event","keyCode","this","handleNewMessage","preventDefault","data","lastChild","scrollIntoView","console","log","window","screen","width","behavior","getNormalTimeFromUTC","thisDate","pmOrAm","hoursNon24","minutesWithOrWithoutZero","getHours","getMinutes","getMonth","getDate","getFullYear","mapedTexts","map","element","i","senderName","textColor","color","className","style","ref","fix","onFocus","maxLength","onKeyDown","enterKeyEvent","onClick","Component","ChatMenu","mapedChats","changeCurrentChat","toggleChatMenu","TopBar","content","hamburgerSvg","hamburgerMenuStyle","display","exitSvg","conditionalRender","type","toggleHamburgerMenu","HamburgerMenu","goToBugReportWebsite","location","replace","a","options","method","fetch","response","json","toggleSettings","logout","href","themes","name","bodyColor","contrastingBodyColor","yellowColor","greenColor","lineColor","hamburgerColor","themeOptions","theme","onChange","changeTheme","MainUi","arg","currentChat","chatMenuStyle","rightContainerStyle","setState","prevState","block","none","hamburgerMenuWasClosed","chatmenuStyle","isMobile","textUiStyle","topBarStyle","settingsStyle","grayBackgroundStyle","target","socket","emit","settings","err","keys","Object","values","_","forEach","document","documentElement","setProperty","state","texts","chats","internetWarningPopUpStyle","URL","righContainer","bind","displayMessage","audio","Audio","ping","orientation","addEventListener","angle","alert","io","withCredentials","on","body","collections","visibilityState","play","reload","message","chatToAddTo","chat","indexOf","result","concat","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f661acf6.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { buildQueries } from '@testing-library/react'\r\nimport React from 'react'\r\nexport default class TextsUi extends React.Component {\r\n   constructor(props) {\r\n      super()\r\n      this.textInput = React.createRef()\r\n      this.messageView = React.createRef()\r\n      this.oldProps = {}\r\n   }\r\n   handleNewMessage() {\r\n      const checkIfInputIsEmpty = () => {\r\n         if (this.textInput.current.value !== \"\") {\r\n            sendMessage()\r\n         } else {\r\n            this.textInput.current.placeholder = \"that was an empty message :(\"\r\n         }\r\n      }\r\n      const sendMessage = () => {\r\n         this.textInput.current.focus()\r\n         var params = {\r\n            text: this.textInput.current.value,\r\n            sender: this.props.username,\r\n            time: new Date().getTime()\r\n         }\r\n         this.props.sendAndDisplayMessage(params)\r\n         this.textInput.current.value = \"\"\r\n         this.textInput.current.placeholder = \"type a message here\"\r\n      }\r\n      checkIfInputIsEmpty()\r\n   }\r\n   enterKeyEvent(event) {\r\n      if (event.keyCode == 13) {\r\n         this.handleNewMessage();\r\n         event.preventDefault();\r\n      };\r\n   }\r\n   componentDidMount() {\r\n      this.oldProps = this.props.data\r\n      this.messageView.current.lastChild.scrollIntoView();\r\n      this.textInput.current.focus()\r\n   }\r\n   componentDidUpdate() {\r\n      if (this.props.data !== this.oldProps &&\r\n         this.props.data[0] === this.oldProps[0]\r\n      ) {//newProps\r\n         console.log('it worked!')\r\n         this.oldProps = this.props.data\r\n         if (window.screen.width > 760) {\r\n            this.messageView.current.lastChild.scrollIntoView({ behavior: \"smooth\" });\r\n         } else {\r\n            this.messageView.current.lastChild.scrollIntoView();\r\n         }\r\n      } else {//sameProps\r\n         this.messageView.current.lastChild.scrollIntoView();\r\n      }\r\n   }\r\n   render() {\r\n      function getNormalTimeFromUTC(thisDate) {\r\n         var pmOrAm\r\n         var hoursNon24\r\n         var minutesWithOrWithoutZero\r\n         thisDate = new Date(thisDate)\r\n         if (thisDate.getHours() > 12) {\r\n            pmOrAm = 'PM'\r\n            hoursNon24 = thisDate.getHours() - 12\r\n         } else {\r\n            pmOrAm = 'AM'\r\n            hoursNon24 = thisDate.getHours()\r\n            if (hoursNon24 === 0) {\r\n               hoursNon24 = 12\r\n            }\r\n         }\r\n         if (thisDate.getMinutes() <= 9) {\r\n            minutesWithOrWithoutZero = '0'\r\n         } else {\r\n            minutesWithOrWithoutZero = ''\r\n         }\r\n         var output = (thisDate.getMonth()\r\n            + 1 + '/' + thisDate.getDate())\r\n            + '/' + thisDate.getFullYear()\r\n            + ' ' + hoursNon24\r\n            + ':' + minutesWithOrWithoutZero + thisDate.getMinutes()\r\n            + ' ' + pmOrAm;\r\n         return (output)\r\n      }\r\n      const mapedTexts = this.props.data.map((element, i) => {\r\n         var senderName = element.sender\r\n         var textColor = { color: \"#52fb9e\" }\r\n         if (element.sender === this.props.username) {\r\n            senderName = \"you\"\r\n            textColor = { color: \"#63caec\" }\r\n         }\r\n         return (\r\n            <div className=\"individualMessage\" key={i} style={textColor} >\r\n               <div className=\"info\">\r\n                  <span className=\"sender\">{senderName + \" - \"}</span>\r\n                  <span className=\"time\">{\"  \" + getNormalTimeFromUTC(element.time)}</span>\r\n               </div>\r\n               {element.text}\r\n            </div>\r\n         )\r\n      })\r\n      return (\r\n         <div className=\"TextsUi\" style={this.props.style}>\r\n            <div\r\n               className=\"messagesView\"\r\n               ref={this.messageView}\r\n            >\r\n               {mapedTexts}\r\n               <div ref={this.fix} />\r\n            </div>\r\n            <div className=\"messageInputs\">\r\n               <textarea\r\n                  onFocus={() => {\r\n                     this.messageView.current.lastChild.scrollIntoView();\r\n                  }}\r\n                  maxLength=\"170\"\r\n                  ref={this.textInput}\r\n                  onKeyDown={(event) => { this.enterKeyEvent(event) }}\r\n                  placeholder=\"type a message here\"\r\n               />\r\n               <button onClick={() => { this.handleNewMessage() }}>\r\n                  Send\r\n               </button>\r\n            </div>\r\n\r\n         </div>\r\n      )\r\n   }\r\n}","import React from 'react'\r\nexport default class ChatMenu extends React.Component {\r\n   constructor() {\r\n      super()\r\n   }\r\n   render() {\r\n      const mapedChats = this.props.data.map((element, i) => {\r\n         return (\r\n            <div\r\n               className=\"individualChat\"\r\n               onClick={() => { this.props.changeCurrentChat(i) }}\r\n               key={i}\r\n            >\r\n               {element}\r\n            </div>\r\n         )\r\n      })\r\n      return (\r\n         <div className=\"ChatMenu\" style={this.props.style}>\r\n            <div className=\"topBar\">\r\n               <a\r\n                  className='exitButton'\r\n                  onClick={()=> this.props.toggleChatMenu()}\r\n               />\r\n               Chats\r\n            </div>\r\n            <div className=\"chats\">\r\n               {mapedChats}\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}","export default __webpack_public_path__ + \"static/media/exit.49f87151.svg\";","export default __webpack_public_path__ + \"static/media/hamburger.ede0bbc5.svg\";","import React from \"react\"\r\nimport exitSvg from '../../resources/exit.svg'\r\nimport hamburgerSvg from '../../resources/hamburger.svg'\r\n\r\n\r\nexport default class TopBar extends React.Component {\r\n   constructor() {\r\n      super()\r\n      this.style = { content: `url(${hamburgerSvg})` }\r\n   }\r\n   conditionalRender() {\r\n      if (this.props.hamburgerMenuStyle.display === \"block\") {\r\n         this.style = { content: `url(${exitSvg})` }\r\n      } else {\r\n         this.style = { content: `url(${hamburgerSvg})` }\r\n      }\r\n   }\r\n   render() {\r\n      this.conditionalRender()\r\n      return (\r\n         <div className=\"TopBar\" style = {this.props.style}>\r\n            <a className=\"chatButton\" onClick={()=> this.props.toggleChatMenu()}/>\r\n            <div>{this.props.data}</div>\r\n            <a\r\n               className=\"hamburgerButton\"\r\n               type=\"button\"\r\n               onClick={() => { this.props.toggleHamburgerMenu() }}\r\n               style={this.style}\r\n            />\r\n         </div>\r\n      )\r\n   }\r\n}","import React from 'react'\r\n\r\nexport default class HamburgerMenu extends React.Component {\r\n   constructor() {\r\n      super()\r\n   }\r\n   goToBugReportWebsite = () => {\r\n      window.location.replace('https://tipsandbugreport.netlify.app/')\r\n   }\r\n   async logout() {\r\n      const options = {\r\n          method: 'delete',\r\n      };\r\n      const response = await fetch('/logout', options);\r\n      const json = await response.json();\r\n      window.location.replace(\"/login\")\r\n  }\r\n   render() {\r\n      return (\r\n         <div className=\"HamburgerMenu\" style={this.props.style}>\r\n            <a className=\"exitButton\" onClick={() => this.props.toggleHamburgerMenu()}/>\r\n            <div className=\"youAreLoggedInAs\">Logged in as {this.props.username} </div>\r\n            <button onClick={() => this.props.toggleSettings()} >Settings</button><br />\r\n            <button onClick={() => this.logout()}>Logout</button><br />\r\n            <button onClick={this.goToBugReportWebsite}>Report Bugs</button>\r\n            <a className=\"homeLink\" href=\"/home\">Home</a>\r\n         </div>\r\n      ) \r\n   }\r\n}","var themes = [\r\n   {\r\n      name: 'select'\r\n   },\r\n   {\r\n      name: 'black',\r\n      bodyColor: 'rgb(20, 20, 20)',\r\n      contrastingBodyColor: 'rgb(30, 30, 30)',\r\n      textColor: 'white',\r\n      yellowColor: 'rgb(196, 199, 0)',\r\n      greenColor: '#52fb9e',\r\n      lineColor: 'white',\r\n      hamburgerColor: 'brightness(100%)'\r\n   },\r\n   {\r\n      name: 'gray',\r\n      bodyColor: 'rgb(56, 56, 56)',\r\n      contrastingBodyColor: 'rgb(70,70,70)',\r\n      textColor: 'white',\r\n      yellowColor: 'rgb(238, 241, 35)',\r\n      greenColor: '#52fb9e',\r\n      lineColor: 'white',\r\n      hamburgerColor: 'brightness(100%)'\r\n   }, {\r\n      name: 'white',\r\n      bodyColor: 'white',\r\n      contrastingBodyColor: 'rgb(200,200,200)',\r\n      textColor: 'rgb(56, 56, 56)',\r\n      yellowColor: 'rgb(196, 199, 0)',\r\n      greenColor: '#0bdc12',\r\n      lineColor: 'black',\r\n      hamburgerColor: 'brightness(30%)'\r\n   },\r\n]\r\nexport default themes","import React from 'react'\r\nimport themes from '../themes.js'\r\n\r\nexport default class HamburgerMenu extends React.Component {\r\n   constructor() {\r\n      super()\r\n   }\r\n   render() {\r\n      var themeOptions = themes.map((element, i) => {\r\n         return (\r\n            <option value={i} key={i}>{element.name}</option>\r\n         )\r\n      })\r\n      return (\r\n         <div className=\"Settings\" style={this.props.style} >\r\n            <a type='button' onClick={() => this.props.toggleSettings()}></a>\r\n            <div className=\"title\">Settings</div>\r\n            <div>Theme</div>\r\n            <select value={this.props.theme} onChange={this.props.changeTheme}>\r\n               {themeOptions}\r\n            </select>\r\n         </div>\r\n      )\r\n   }\r\n}","export default __webpack_public_path__ + \"static/media/ping.6f864733.mp3\";","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport TextsUi from './mainUi/TextsUi.js'\r\nimport ChatMenu from './mainUi/ChatMenu.js'\r\nimport TopBar from './mainUi/TopBar.js'\r\nimport HamburgerMenu from './mainUi/HamburgerMenu.js'\r\nimport Settings from './mainUi/Settings.js'\r\nimport css from './App.scss'\r\nimport { io } from 'socket.io-client'\r\nimport themes from './themes.js'\r\nimport ping from '../resources/ping.mp3'\r\n\r\nexport default class MainUi extends React.Component {\r\n   constructor() {\r\n      super()\r\n      this.state = {\r\n         texts: [[{\r\n            \"time\": 3141592653,\r\n            \"text\": \"Loading...\",\r\n            \"sender\": \"Loading...\"\r\n         }],],\r\n         chats: [\"Loading...\"],\r\n         currentChat: 0,\r\n         username: \"Loading\",\r\n         theme: 0,\r\n\r\n         hamburgerMenuStyle: { display: \"none\" },\r\n         settingsStyle: { display: \"none\" },\r\n         internetWarningPopUpStyle: { display: \"none\" },\r\n         grayBackgroundStyle: { display: \"none\" },\r\n         chatMenuStyle: { display: \"block\" },\r\n         rightContainerStyle: {},\r\n         topBarStyle: {},\r\n         textUiStyle: {}\r\n      }\r\n      this.URL = (() => {\r\n         if (process.env.NODE_ENV === \"development\") {\r\n            return \"http://localhost:8080/\"\r\n         } else {\r\n            return \"/\"\r\n         }\r\n      })()\r\n      this.righContainer = React.createRef()\r\n      this.changeCurrentChat = this.changeCurrentChat.bind(this)\r\n      this.displayMessage = this.displayMessage.bind(this)\r\n      this.audio = new Audio(ping)\r\n      this.isMobile = window.screen.width <= 760\r\n   }\r\n   componentDidMount() {\r\n      window.screen.orientation.addEventListener(\"change\", orientation => {\r\n         if (window.screen.orientation.angle !== 0) {\r\n            alert(\"this app works best in portrait mode\")\r\n         }\r\n      });\r\n      this.socket = io(this.URL, {\r\n         withCredentials: true\r\n      })\r\n      this.socket.on('allTexts', (body) => {\r\n         if (body !== \"invalid credentials\") {\r\n            this.setState((_) => {\r\n               return {\r\n                  chats: body.collections,\r\n                  texts: body.data,\r\n                  username: body.username\r\n               }\r\n            })\r\n            this.changeTheme(body.settings)\r\n         } else {\r\n            console.log(\"ERR Credentials Invalid\")\r\n         }\r\n      })\r\n      this.socket.on('text', (body) => {\r\n         this.displayMessage(body)\r\n         if (document.visibilityState !== 'visible') {\r\n            this.audio.play()\r\n         }\r\n      })\r\n      this.socket.on('disconnect', () => {\r\n         this.setState((_) => {\r\n            return {\r\n               internetWarningPopUpStyle: { display: \"block\" },\r\n               grayBackgroundStyle: { display: \"block\" }\r\n            }\r\n         })\r\n         window.location.reload();\r\n      })\r\n   }\r\n   changeCurrentChat = (arg) => {\r\n      var style = {\r\n         currentChat: arg\r\n      }\r\n      if (window.screen.width <= 760) {\r\n         style.chatMenuStyle = { display: \"none\" }\r\n         style.rightContainerStyle = { display: \"block\" }\r\n      }\r\n      this.setState(style)\r\n   }\r\n   displayMessage(message) {\r\n      this.setState((prevState) => {\r\n         var chatToAddTo = this.state.currentChat\r\n         if (message.chat) {\r\n            chatToAddTo = prevState.chats.indexOf(message.chat)\r\n         }\r\n         var newTexts = prevState.texts.map((element, i) => {\r\n            var result = element\r\n            if (i === chatToAddTo) {\r\n               result = element.concat([message])\r\n            }\r\n            return result\r\n         })\r\n         return {\r\n            texts: newTexts\r\n         }\r\n      })\r\n   }\r\n   sendAndDisplayMessage(message) {\r\n      this.displayMessage(message)\r\n      this.socket.emit('texts', {\r\n         text: message.text,\r\n         time: message.time,\r\n         chat: this.state.chats[this.state.currentChat]\r\n      })\r\n   }\r\n   toggleHamburgerMenu = () => {\r\n      this.setState((prevState) => {\r\n         var block = { display: \"block\" }\r\n         var none = { display: \"none\" }\r\n         var hamburgerMenuWasClosed = prevState.hamburgerMenuStyle.display === \"none\"\r\n         var style = {\r\n            hamburgerMenuStyle: none,\r\n            rightContainerStyle: block,\r\n            chatmenuStyle: block\r\n         }\r\n         if (this.isMobile) {\r\n            if (hamburgerMenuWasClosed) {\r\n               style.textUiStyle = none\r\n               style.topBarStyle = none\r\n               style.chatmenuStyle = none\r\n               style.hamburgerMenuStyle = block\r\n            } else {\r\n               style.chatmenuStyle = none\r\n               style.topBarStyle = block\r\n               style.textUiStyle = block\r\n            }\r\n         } else {\r\n            if (hamburgerMenuWasClosed) {\r\n               style.hamburgerMenuStyle = block\r\n            }\r\n         }\r\n         console.log(style)\r\n         return style\r\n      })\r\n   }\r\n   toggleSettings = () => {\r\n      this.setState((prevState) => {\r\n         var style = { display: \"none\" }\r\n         if (prevState.settingsStyle.display === \"none\") {\r\n            style = { display: \"block\" }\r\n         }\r\n         return {\r\n            settingsStyle: style,\r\n            grayBackgroundStyle: style\r\n         }\r\n      })\r\n   }\r\n   changeTheme = (arg) => {\r\n      try {\r\n         var value = arg.target.value\r\n         this.socket.emit('settings', {\r\n            settings: value\r\n         })\r\n      } catch (err) {\r\n         var value = arg\r\n      }\r\n      var keys = Object.keys(themes[value]),\r\n         values = Object.values(themes[value])\r\n      this.setState((_) => {\r\n         return {\r\n            theme: value\r\n         }\r\n      })\r\n      keys.forEach((element, i) => {\r\n         document.documentElement.style.setProperty(`--${element}`, values[i]);\r\n      })\r\n   }\r\n   toggleChatMenu = () => {\r\n      this.setState((prevState) => {\r\n         var style = {\r\n            chatMenuStyle: { display: \"block\" },\r\n            rightContainerStyle: { display: \"none\" }\r\n         }\r\n         if (prevState.chatMenuStyle.display === \"block\") {\r\n            style = {\r\n               chatMenuStyle: { display: \"none\" },\r\n               rightContainerStyle: { display: \"block\" }\r\n            }\r\n         }\r\n         return style\r\n      })\r\n\r\n   }\r\n   render() {\r\n      return (\r\n         <div className=\"mainUi\"\r\n            ref={this.righContainer}\r\n         >\r\n            <div\r\n               className=\"internetWarningPopUp\"\r\n               style={this.state.internetWarningPopUpStyle}\r\n            >Connection error, please check your internet</div>\r\n            <div\r\n               className=\"grayBackground\"\r\n               style={this.state.grayBackgroundStyle}\r\n            />\r\n            <Settings\r\n               style={this.state.settingsStyle}\r\n               toggleSettings={this.toggleSettings}\r\n               changeTheme={this.changeTheme}\r\n               theme={this.state.theme}\r\n            />\r\n            <ChatMenu\r\n               changeCurrentChat={(arg) => this.changeCurrentChat(arg)}\r\n               data={this.state.chats}\r\n               style={this.state.chatMenuStyle}\r\n               toggleChatMenu={this.toggleChatMenu}\r\n            />\r\n            <div\r\n               className=\"rightContainer\"\r\n               style={this.state.rightContainerStyle}\r\n            >\r\n               <TopBar\r\n                  style={this.state.topBarStyle}\r\n                  hamburgerMenuStyle={this.state.hamburgerMenuStyle}\r\n                  data={this.state.chats[this.state.currentChat]}\r\n                  toggleHamburgerMenu={this.toggleHamburgerMenu}\r\n                  toggleChatMenu={this.toggleChatMenu}\r\n               />\r\n               <HamburgerMenu\r\n                  username={this.state.username}\r\n                  style={this.state.hamburgerMenuStyle}\r\n                  toggleSettings={this.toggleSettings}\r\n                  toggleHamburgerMenu={this.toggleHamburgerMenu}\r\n               />\r\n               <TextsUi\r\n                  style={this.state.textUiStyle}\r\n                  sendAndDisplayMessage={(arg) => this.sendAndDisplayMessage(arg)}\r\n                  data={this.state.texts[this.state.currentChat]}\r\n                  username={this.state.username}\r\n               />\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport App from './components/App.js'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}